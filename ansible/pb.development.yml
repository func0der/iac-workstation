---

- name: Setup Development systems
  hosts: all
  tasks:
    - name: Install and configure git
      block:
        # @todo Creation and copying of those files is not optimal. We can not account for changes
        # in the .gitconfig here. It would be better to either run `git config` OR have a custom `.gitconfig.custom`
        # and a file line check for .gitconfig.
        - name: Place config files in home directory
          ansible.builtin.copy:
            src: files/home/.gitconfig
            dest: ~/.gitconfig
            force: false # This file is very likely changed by the package installation

        - name: Place config files in home directory
          ansible.builtin.copy:
            src: "files/home/{{ item }}"
            dest: "~/{{ item }}"
          loop:
            - .gitconfig.github
            - .gitignore

        - name: Install git
          become: true
          ansible.builtin.package:
            name: git

    - name: Create needed directories in ~
      ansible.builtin.file:
        name: "~/{{ item }}"
        state: directory
      loop:
        - bin
        - Projects
        - Projects/work

    - name: Install nerdfonts
      block:
        - name: Make .fonts directory
          ansible.builtin.file:
            dest: ~/.local/share/fonts/NerdFonts
            state: directory

        - name: Download nerdfont
          ansible.builtin.unarchive:
            remote_src: true
            src: https://github.com/ryanoasis/nerd-fonts/releases/download/v3.1.1/FiraMono.zip
            include:
              - FiraMonoNerdFontMono-Bold.otf
              - FiraMonoNerdFontMono-Medium.otf
              - FiraMonoNerdFontMono-Regular.otf
            dest: ~/.local/share/fonts/NerdFonts

    - name: Install starship
      block:
        - name: Check for Starship command
          ansible.builtin.command:
            cmd: which starship
          register: starship_installed
          ignore_errors: yes
          no_log: true

        - name: Temporary location for installer file
          ansible.builtin.tempfile:
            suffix: starship_installer
          register: starship_temp_installer
          when: starship_installed.rc != 0

        - name: Download installer
          ansible.builtin.get_url:
            url: https://starship.rs/install.sh
            dest: "{{ starship_temp_installer.path }}"
            force: true # Because we have already created the temp file before
          when: starship_temp_installer.changed

        - name: Run installer
          ansible.builtin.script:
            cmd: "{{ starship_temp_installer.path }} --yes --bin-dir ~/bin"
            executable: /usr/bin/sh
            creates: ~/bin/starship
          when: starship_temp_installer.changed

        - name: Delete installer
          ansible.builtin.file:
            path: "{{ starship_temp_installer.path }}"
            state: absent
          when: starship_temp_installer.changed

    - name: Configure terminal
      block:
        - name: Find default profiles name
          ansible.builtin.command:
            cmd: gsettings get org.gnome.Terminal.ProfilesList default
          register: gnome_terminal_default_profile

        - name: Configure terminal's default profile
          block:
            # Maybe add a loop here with a check, so we do not run this every time.
            - name: Set nerdfont
              ansible.builtin.command:
                cmd: "gsettings set {{gnome_terminal_default_profile_gsettings_path}}/ font 'FiraMono Nerd Font Mono 12'"

            - name: Set shell to be login shell
              ansible.builtin.command:
                cmd: "gsettings set {{gnome_terminal_default_profile_gsettings_path}}/ login-shell true"
          vars:
            gnome_terminal_default_profile_gsettings_path: "org.gnome.Terminal.Legacy.Profile:/org/gnome/terminal/legacy/profiles:/:{{gnome_terminal_default_profile.stdout }}"

    - name: Configure shell
      block:
        - name: Install neofetch
          become: true
          ansible.builtin.package:
            name: neofetch

        - name: Place bash config files
          ansible.builtin.copy:
            src: "files/home/{{ item }}"
            dest: "~/{{ item }}"
          loop:
            - .bash_paths
            - .bash_profile

    - name: Install virtualbox environment
      become: true
      ansible.builtin.package:
        name: "{{ item }}"
      loop:
        - virtualbox

    - name: Install vagrant
      block:
        - name: add gpg repo key
          become: true
          ansible.builtin.get_url:
            url: https://apt.releases.hashicorp.com/gpg
            dest: /etc/apt/keyrings/hashicorp.asc
            mode: '0644'
          when: use_custom_repos is defined

        - name: add apt repo
          become: true
          ansible.builtin.apt_repository:
            repo: "deb [signed-by=/etc/apt/keyrings/hashicorp.asc] https://apt.releases.hashicorp.com {{ ansible_distribution_release }} main"
            filename: hashicorp
          when: use_custom_repos is defined

        - name: Installing required packages
          become: true
          ansible.builtin.package:
            name: vagrant

    - name: Install docker
      become: true
      ansible.builtin.package:
        name: "{{ item }}"
      loop:
        - docker-compose-v2
        - docker.io

    - name: Install Insomnia (Flatpak)
      community.general.flatpak:
        method: user
        name: rest.insomnia.Insomnia

    - name: Install IntelliJ IDEA Ultimate
      ansible.builtin.include_role:
        name: diademiemi.jetbrains.idea
      vars:
        jetbrains_idea_version: 2023.3.1
        jetbrains_idea_edition: IU
        jetbrains_idea_plugins:
          - 6610
          - 9674
          - 7512
          - 7320
          - 15184
          - 7379
          - 7060
