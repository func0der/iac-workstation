---
- name: Setup Private system
  hosts: all
  tasks:
    - name: Nextcloud
      tags:
        - nextcloud
      vars:
        nextcloud_client_version: 3.12.1
      block:
        - name: Nextcloud | Version check
          block:
            - name: Nextcloud | Version check | Get current version
              ansible.builtin.command:
                cmd: ~/Applications/Nextcloud.AppImage --version
              register: nextcloud_current_version_check
              check_mode: false

            - name: Nextcloud | Version check | Extract version
              ansible.builtin.set_fact:
                nextcloud_current_version: "{{ nextcloud_current_version_check.stdout | regex_search(version_regex,'\\1') | first }}"
              vars:
                version_regex: 'Nextcloud version ([\d\.]+) \(build'

        - name: Nextcloud | Install
          when: nextcloud_client_version != nextcloud_current_version
          block:
            - name: Nextcloud | Install | Download AppImage
              ansible.builtin.get_url:
                url: "https://github.com/nextcloud-releases/desktop/releases/download/v{{nextcloud_client_version}}/Nextcloud-{{nextcloud_client_version}}-x86_64.AppImage"
                dest: ~/Applications/Nextcloud.AppImage
                mode: 0700

            - name: Nextcloud | Install | Create autostart entry
              block:
                - name: Make sure autostart directory exists
                  ansible.builtin.file:
                    name: ~/.config/autostart
                    state: directory

                - name: Place nextcloud autostart item
                  ansible.builtin.copy:
                    src: files/home/.config/autostart/com.nextcloud.desktopclient.nextcloud.desktop
                    dest: ~/.config/autostart/Nextcloud.desktop

    - name: Install flatpak software
      tags:
        - flatpaks
      community.general.flatpak:
        method: user
        name: "{{ item }}"
      loop:
        - org.gabmus.hydrapaper
        - org.mozilla.Thunderbird
        # @todo - com.naps2.Naps2 (https://github.com/cyanfish/naps2)

    - name: Gather the package facts
      ansible.builtin.package_facts:
        manager: auto

    # @see https://protonvpn.com/support/official-linux-vpn-fedora/
    - name: Install protonvpn
      tags:
        - protonvpn
      block:
        - block:
            - name: Temporary location for installer file
              ansible.builtin.tempfile:
                suffix: protonvpn_installer.deb
              register: protonvpn_temp_installer

            - name: Download repo installer
              ansible.builtin.get_url:
                url: https://repo.protonvpn.com/debian/dists/stable/main/binary-all/protonvpn-stable-release_1.0.3-2_all.deb
                checksum: sha256:c68a0b8dad58ab75080eed7cb989e5634fc88fca051703139c025352a6ee19ad
                dest: "{{ protonvpn_temp_installer.path }}"
                force: true # Because we have already created the temp file before

            - name: Run repo installer
              become: true
              ansible.builtin.apt:
                deb: "{{ protonvpn_temp_installer.path }}"

            - name: Install protonvpn
              become: true
              ansible.builtin.apt:
                name: protonvpn
                update_cache: true
          when: ansible_distribution == 'Debian'

        - block:
            - name: Temporary location for installer file
              ansible.builtin.tempfile:
                suffix: protonvpn_installer.rpm
              register: protonvpn_temp_installer

            - name: Download repo installer
              ansible.builtin.get_url:
                url: https://repo.protonvpn.com/fedora-39-stable/protonvpn-stable-release/protonvpn-stable-release-1.0.1-2.noarch.rpm
                checksum: sha256:c2c59088b3d7e9576107f084b909743bf00446f377189934ae386502c667fb65
                dest: "{{ protonvpn_temp_installer.path }}"
                force: true # Because we have already created the temp file before

            - name: Run repo installer
              become: true
              ansible.builtin.dnf:
                name: "{{ protonvpn_temp_installer.path }}"
                disable_gpg_check: true

            - name: Install protonvpn
              become: true
              ansible.builtin.dnf:
                name: protonvpn
                update_cache: true
                disable_gpg_check: true
          when: ansible_distribution == 'Fedora'

        - name: Delete repo installer
          ansible.builtin.file:
            path: "{{ protonvpn_temp_installer.path }}"
            state: absent
          when: protonvpn_temp_installer.changed
      when: "'protonvpn' not in ansible_facts.packages"
