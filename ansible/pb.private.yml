---
- name: Setup Private system
  hosts: all
  tasks:
    - name: Install Nextcloud
      block:
        - name: Download AppImage
          ansible.builtin.get_url:
            url: "https://github.com/nextcloud-releases/desktop/releases/download/v{{nextcloud_client_version}}/Nextcloud-{{nextcloud_client_version}}-x86_64.AppImage"
            dest: ~/Applications/Nextcloud.AppImage
            mode: 0700
          vars:
            nextcloud_client_version: 3.11.0

        - name: Create autostart entry
          block:
            - name: Make sure autostart directory exists
              ansible.builtin.file:
                name: ~/.config/autostart
                state: directory

            - name: Place nextcloud autostart item
              ansible.builtin.copy:
                src: files/home/.config/autostart/com.nextcloud.desktopclient.nextcloud.desktop
                dest: ~/.config/autostart/com.nextcloud.desktopclient.nextcloud.desktop

    - name: Install flatpak software
      community.general.flatpak:
        method: user
        name: "{{ item }}"
      loop:
        - org.gabmus.hydrapaper
        - org.mozilla.Thunderbird
        # @todo - com.naps2.Naps2 (https://github.com/cyanfish/naps2)

    - name: Gather the package facts
      ansible.builtin.package_facts:
        manager: auto

    - name: Install protonvpn
      block:
        - name: Temporary location for installer file
          ansible.builtin.tempfile:
            suffix: protonvpn_installer
          register: protonvpn_temp_installer

        - name: Download repo installer
          ansible.builtin.get_url:
            url: https://repo.protonvpn.com/debian/dists/stable/main/binary-all/protonvpn-stable-release_1.0.3-2_all.deb
            checksum: sha256:c68a0b8dad58ab75080eed7cb989e5634fc88fca051703139c025352a6ee19ad
            dest: "{{ protonvpn_temp_installer.path }}"
            force: true # Because we have already created the temp file before

        - name: Run repo installer
          become: true
          ansible.builtin.apt:
            deb: "{{ protonvpn_temp_installer.path }}"

        - name: Install protonvpn
          become: true
          ansible.builtin.apt:
            name: protonvpn
            update_cache: true

        - name: Delete repo installer
          ansible.builtin.file:
            path: "{{ protonvpn_temp_installer.path }}"
            state: absent
          when: protonvpn_temp_installer.changed
      when: "'protonvpn' not in ansible_facts.packages"
